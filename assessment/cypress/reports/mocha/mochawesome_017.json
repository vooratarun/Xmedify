{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 4,
    "pending": 0,
    "failures": 2,
    "start": "2025-08-30T07:02:45.579Z",
    "end": "2025-08-30T07:03:02.559Z",
    "duration": 16980,
    "testsRegistered": 6,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c5d82d11-13d3-4221-87bb-e87d8f0bfff8",
      "title": "",
      "fullFile": "cypress/e2e/spec.cy.js",
      "file": "cypress/e2e/spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b754453-90e0-479c-8271-a4311861517b",
          "title": "Hospital",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display state and city dropdowns",
              "fullTitle": "Hospital should display state and city dropdowns",
              "timedOut": null,
              "duration": 1339,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('div#state').should('be.visible'); // Verify the State dropdown is present\ncy.get('div#city').should('be.visible'); // Verify the City dropdown is present",
              "err": {},
              "uuid": "5732f00d-db7a-4cfe-befa-223c740e2be4",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch hospitals when both state and city are selected",
              "fullTitle": "Hospital should fetch hospitals when both state and city are selected",
              "timedOut": null,
              "duration": 4685,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', 'https://meddata-backend.onrender.com/data?state=Alabama&city=DOTHAN', {\n  fixture: 'hospitals.json'\n}).as('getHospitals');\ncy.get('div#state').click(); // Open state dropdown\ncy.contains('li', 'Alabama', {\n  timeout: 15000\n}).click(); // Wait for state options to load and select Alabama\ncy.get('div#city').click(); // Open city dropdown\ncy.contains('li', 'DOTHAN', {\n  timeout: 15000\n}).click(); // Wait for city options to load and select DOTHAN\ncy.get('#searchBtn').should('contain.text', 'Search').click(); // Click the search button\ncy.wait('@getHospitals');\ncy.get('h1').should('contain.text', '2 medical centers available in dothan');",
              "err": {},
              "uuid": "6ab865f0-1c44-4e3f-b6ed-287e9c498f33",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should open appointment booking section when a medical center is clicked",
              "fullTitle": "Hospital should open appointment booking section when a medical center is clicked",
              "timedOut": null,
              "duration": 2994,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', 'https://meddata-backend.onrender.com/data?state=Alabama&city=DOTHAN', {\n  fixture: 'hospitals.json' // Use a mock JSON response file\n}).as('getHospitals');\ncy.get('div#state') // Replace with the selector for the state dropdown\n.click();\ncy.contains('li', 'Alabama', {\n  timeout: 15000\n}) // Replace with a valid state option\n.click();\ncy.get('div#city').click();\ncy.contains('li', 'DOTHAN', {\n  timeout: 15000\n}) // Replace with a valid city option\n.click();\ncy.get('#searchBtn').should('contain.text', 'Search').click(); // Click the search button\ncy.wait('@getHospitals');\ncy.get('button').contains('Book FREE Center Visit').should('be.visible');",
              "err": {},
              "uuid": "1fc82825-7259-444f-bd0c-088c3cdf58d9",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow user to select date and time and book appointment",
              "fullTitle": "Hospital should allow user to select date and time and book appointment",
              "timedOut": null,
              "duration": 3265,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', 'https://meddata-backend.onrender.com/data?state=Alabama&city=DOTHAN', {\n  fixture: 'hospitals.json' // Use a mock JSON response file\n}).as('getHospitals');\ncy.get('div#state') // Replace with the selector for the state dropdown\n.click();\ncy.contains('li', 'Alabama') // Replace with a valid state option\n.click();\ncy.get('div#city').click();\ncy.contains('li', 'DOTHAN') // Replace with a valid city option\n.click();\ncy.get('#searchBtn').should('contain.text', 'Search').click(); // Click the search button\ncy.wait('@getHospitals');\ncy.get('button').contains('Book FREE Center Visit').click();\ncy.get('p').contains('Today');\ncy.get('p').contains('Morning');\ncy.get('p').contains('Afternoon');\ncy.get('p').contains('Evening');",
              "err": {},
              "uuid": "361999cd-30f4-4822-96cd-d9359cf70226",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display all booked slots on the My Bookings page",
              "fullTitle": "Hospital should display all booked slots on the My Bookings page",
              "timedOut": null,
              "duration": 941,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to the \"My Bookings\" page\ncy.visit('https://xmedifycrio2.netlify.app/my-bookings'); // Replace with the actual URL for the My Bookings page\ncy.get('h1').contains('My Bookings');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://xmedifycrio2.netlify.app/my-bookings\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://xmedifycrio2.netlify.app/my-bookings\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n    at <unknown> (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131591:76)\n    at visitFailedByErr (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131006:12)\n    at <unknown> (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131574:13)\n    at tryCatcher (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1720:18)\n    at _drainQueueStep (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://medifyapp/./cypress/e2e/spec.cy.js:79:7)",
                "diff": null
              },
              "uuid": "86ff50b0-1a91-453b-8fb9-2530d4e17187",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should persist bookings in localStorage after page reload",
              "fullTitle": "Hospital should persist bookings in localStorage after page reload",
              "timedOut": null,
              "duration": 2072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const mockBookings = [{\n  \"Hospital Name\": \"southeast alabama medical center\",\n  \"City\": \"DOTHAN\",\n  \"State\": \"Alabama\",\n  \"Hospital Type\": \"General\",\n  \"Hospital overall rating\": \"4.5\",\n  bookingDate: \"2024-12-15\",\n  bookingTime: \"10:00 AM\"\n}];\ncy.window().then(win => {\n  win.localStorage.setItem('bookings', JSON.stringify(mockBookings));\n});\ncy.visit('https://xmedifycrio2.netlify.app/my-bookings'); // Replace with actual My Bookings URL\ncy.get('h3').contains('southeast alabama medical center', {\n  timeout: 5000\n}).should('be.visible');\ncy.reload();\ncy.get('h3').contains('southeast alabama medical center', {\n  timeout: 5000\n}).should('be.visible');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://xmedifycrio2.netlify.app/my-bookings\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://xmedifycrio2.netlify.app/my-bookings\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n    at <unknown> (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131591:76)\n    at visitFailedByErr (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131006:12)\n    at <unknown> (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:131574:13)\n    at tryCatcher (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1830:23)\n    at Promise._settlePromiseFromHandler (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1542:31)\n    at Promise._settlePromise (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1599:18)\n    at Promise._settlePromise0 (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1644:10)\n    at Promise._settlePromises (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:1720:18)\n    at _drainQueueStep (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2430:12)\n    at _drainQueue (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2423:9)\n    at Async._drainQueues (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2439:5)\n    at Async.drainQueues (https://xmedifycrio2.netlify.app/__cypress/runner/cypress_runner.js:2309:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://medifyapp/./cypress/e2e/spec.cy.js:101:7)",
                "diff": null
              },
              "uuid": "44b4e19f-e993-47c7-a105-a9a3e6fffabe",
              "parentUUID": "7b754453-90e0-479c-8271-a4311861517b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5732f00d-db7a-4cfe-befa-223c740e2be4",
            "6ab865f0-1c44-4e3f-b6ed-287e9c498f33",
            "1fc82825-7259-444f-bd0c-088c3cdf58d9",
            "361999cd-30f4-4822-96cd-d9359cf70226"
          ],
          "failures": [
            "86ff50b0-1a91-453b-8fb9-2530d4e17187",
            "44b4e19f-e993-47c7-a105-a9a3e6fffabe"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15296,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}